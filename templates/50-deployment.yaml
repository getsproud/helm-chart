{{- range .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ . }}
  template:
    metadata:
      labels:
        app: {{ . }}
    spec:
      containers:
      - name: {{ . }}-service
        image: ghcr.io/getsproud/{{ . }}:latest
        imagePullPolicy: Always
        readinessProbe:
          {{- if and (ne . "api-gateway") (ne . "react-app") }}
          tcpSocket:
            port: 50051
          initialDelaySeconds: 15
          periodSeconds: 5
          {{- else if eq . "react-app"}}
          httpGet:
            path: /
            {{- if eq $.Values.nodeEnv "stage" }}
            port: 80
            {{- else }}
            port: 3000
            {{- end }}
          initialDelaySeconds: 30
          periodSeconds: 10
          {{- else }}
          httpGet:
            path: /healthz/readiness/{{ . }}
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          {{- end }}
        livenessProbe:
          {{- if and (ne . "api-gateway") (ne . "react-app") }}
          tcpSocket:
            port: 50051
          {{- else if eq . "react-app"}}
          httpGet:
            path: /
            {{- if eq $.Values.nodeEnv "stage" }}
            port: 80
            {{- else }}
            port: 3000
            {{- end }}
          {{- else }}
          httpGet:
            path: /healthz/liveness/{{ . }}
            port: 8080
          {{- end }}
          initialDelaySeconds: 60
          periodSeconds: 10
        ports:
        {{- if eq . "api-gateway" }}
        - containerPort: 8080
          protocol: TCP
        {{- else if eq . "email" }}
        - containerPort: 50051
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        {{- else }}
        - containerPort: 50051
          protocol: TCP
        {{- end }}
        env:
        - name: DOMAIN
          value: {{ $.Values.domain }}.{{ $.Values.environment }}
        - name: NODE_ENV
          value: {{ $.Values.nodeEnv }}
        - name: COTE_DISCOVERY_REDIS_HOST
          value: {{ $.Values.redis.service }}.{{ $.Values.redis.namespace}}.svc.cluster.local
        - name: DISCOVERY_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        {{- if and (ne . "react-app") (ne . "api-gateway" ) }}
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-cluster-developer-password
              key: password
        - name: MONGO_USER
          value: {{ $.Values.mongo.user }}
        - name: MONGO_HOST
          value: {{ $.Values.mongo.host }}
        {{- end }}
        {{- if eq . "email" }}
        envFrom:
        - secretRef:
            name: sendgrid-secret
        {{- end }}
      imagePullSecrets:
      - name: gh-registry
---
{{- end }}
